// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheme.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "scheme.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class RoleScheme_PropSchemeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoleScheme_PropScheme>
     _instance;
} _RoleScheme_PropScheme_default_instance_;
class RoleSchemeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoleScheme>
     _instance;
} _RoleScheme_default_instance_;

namespace protobuf_scheme_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme_PropScheme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme_PropScheme, attack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme_PropScheme, defense_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, vocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, coords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleScheme, props_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RoleScheme_PropScheme)},
  { 7, -1, sizeof(RoleScheme)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleScheme_PropScheme_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleScheme_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "scheme.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_option_2eproto::InitDefaults();
  _RoleScheme_PropScheme_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoleScheme_PropScheme_default_instance_);_RoleScheme_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoleScheme_default_instance_);_RoleScheme_default_instance_._instance.get_mutable()->props_ = const_cast< ::RoleScheme_PropScheme*>(
      ::RoleScheme_PropScheme::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014scheme.proto\032\014option.proto\"\205\004\n\nRoleSch"
      "eme\022\033\n\006roleId\030\001 \001(\005B\013\312>\010\350\247\222\350\211\262ID\022\027\n\004name"
      "\030\002 \001(\tB\t\312>\006\345\220\215\345\255\227\022\030\n\005level\030\003 \001(\005B\t\312>\006\347\255\211"
      "\347\272\247\0221\n\010vocation\030\004 \001(\0162\024.RoleScheme.Vocat"
      "ionB\t\312>\006\350\201\214\344\270\232\022\031\n\006coords\030\005 \003(\005B\t\312>\006\345\235\220\346\240"
      "\207\0220\n\005props\030\006 \001(\0132\026.RoleScheme.PropScheme"
      "B\t\312>\006\345\261\236\346\200\247\032C\n\nPropScheme\022\031\n\006attack\030\001 \001("
      "\005B\t\312>\006\346\224\273\345\207\273\022\032\n\007defense\030\002 \001(\005B\t\312>\006\351\230\262\345\276\241"
      "\"\213\001\n\010Vocation\022\036\n\017VOCATION_UNKNOW\020\000\032\t\312>\006\346"
      "\234\252\347\237\245\022\037\n\020VOCATION_WARRIOR\020\001\032\t\312>\006\346\210\230\345\243\253\022\036"
      "\n\017VOCATION_MASTER\020\002\032\t\312>\006\346\263\225\345\270\210\022\036\n\017VOCATI"
      "ON_SHAMAN\020\003\032\t\312>\006\345\267\253\345\270\210:T\312>\024\350\247\222\350\211\262\346\225\260\346\215\256\350"
      "\241\250.xlsx\322>\014\350\247\222\350\211\262\346\225\260\346\215\256\332>\006roleId\342>\trole_d"
      "ata\352>\026_G[\'RoleDataTable\'] = b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 556);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scheme.proto", &protobuf_RegisterTypes);
  ::protobuf_option_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_scheme_2eproto

const ::google::protobuf::EnumDescriptor* RoleScheme_Vocation_descriptor() {
  protobuf_scheme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scheme_2eproto::file_level_enum_descriptors[0];
}
bool RoleScheme_Vocation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RoleScheme_Vocation RoleScheme::VOCATION_UNKNOW;
const RoleScheme_Vocation RoleScheme::VOCATION_WARRIOR;
const RoleScheme_Vocation RoleScheme::VOCATION_MASTER;
const RoleScheme_Vocation RoleScheme::VOCATION_SHAMAN;
const RoleScheme_Vocation RoleScheme::Vocation_MIN;
const RoleScheme_Vocation RoleScheme::Vocation_MAX;
const int RoleScheme::Vocation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleScheme_PropScheme::kAttackFieldNumber;
const int RoleScheme_PropScheme::kDefenseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleScheme_PropScheme::RoleScheme_PropScheme()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scheme_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleScheme.PropScheme)
}
RoleScheme_PropScheme::RoleScheme_PropScheme(const RoleScheme_PropScheme& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attack_, &from.attack_,
    static_cast<size_t>(reinterpret_cast<char*>(&defense_) -
    reinterpret_cast<char*>(&attack_)) + sizeof(defense_));
  // @@protoc_insertion_point(copy_constructor:RoleScheme.PropScheme)
}

void RoleScheme_PropScheme::SharedCtor() {
  ::memset(&attack_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&defense_) -
      reinterpret_cast<char*>(&attack_)) + sizeof(defense_));
  _cached_size_ = 0;
}

RoleScheme_PropScheme::~RoleScheme_PropScheme() {
  // @@protoc_insertion_point(destructor:RoleScheme.PropScheme)
  SharedDtor();
}

void RoleScheme_PropScheme::SharedDtor() {
}

void RoleScheme_PropScheme::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleScheme_PropScheme::descriptor() {
  protobuf_scheme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scheme_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleScheme_PropScheme& RoleScheme_PropScheme::default_instance() {
  protobuf_scheme_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleScheme_PropScheme* RoleScheme_PropScheme::New(::google::protobuf::Arena* arena) const {
  RoleScheme_PropScheme* n = new RoleScheme_PropScheme;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleScheme_PropScheme::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleScheme.PropScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&attack_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&defense_) -
      reinterpret_cast<char*>(&attack_)) + sizeof(defense_));
  _internal_metadata_.Clear();
}

bool RoleScheme_PropScheme::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleScheme.PropScheme)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defense_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleScheme.PropScheme)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleScheme.PropScheme)
  return false;
#undef DO_
}

void RoleScheme_PropScheme::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleScheme.PropScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->attack(), output);
  }

  // int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
  if (this->defense() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->defense(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleScheme.PropScheme)
}

::google::protobuf::uint8* RoleScheme_PropScheme::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleScheme.PropScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->attack(), target);
  }

  // int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
  if (this->defense() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->defense(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleScheme.PropScheme)
  return target;
}

size_t RoleScheme_PropScheme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleScheme.PropScheme)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
  if (this->attack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack());
  }

  // int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
  if (this->defense() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->defense());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleScheme_PropScheme::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleScheme.PropScheme)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleScheme_PropScheme* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleScheme_PropScheme>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleScheme.PropScheme)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleScheme.PropScheme)
    MergeFrom(*source);
  }
}

void RoleScheme_PropScheme::MergeFrom(const RoleScheme_PropScheme& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleScheme.PropScheme)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attack() != 0) {
    set_attack(from.attack());
  }
  if (from.defense() != 0) {
    set_defense(from.defense());
  }
}

void RoleScheme_PropScheme::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleScheme.PropScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleScheme_PropScheme::CopyFrom(const RoleScheme_PropScheme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleScheme.PropScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleScheme_PropScheme::IsInitialized() const {
  return true;
}

void RoleScheme_PropScheme::Swap(RoleScheme_PropScheme* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleScheme_PropScheme::InternalSwap(RoleScheme_PropScheme* other) {
  using std::swap;
  swap(attack_, other->attack_);
  swap(defense_, other->defense_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleScheme_PropScheme::GetMetadata() const {
  protobuf_scheme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scheme_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleScheme_PropScheme

// int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
void RoleScheme_PropScheme::clear_attack() {
  attack_ = 0;
}
::google::protobuf::int32 RoleScheme_PropScheme::attack() const {
  // @@protoc_insertion_point(field_get:RoleScheme.PropScheme.attack)
  return attack_;
}
void RoleScheme_PropScheme::set_attack(::google::protobuf::int32 value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.PropScheme.attack)
}

// int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
void RoleScheme_PropScheme::clear_defense() {
  defense_ = 0;
}
::google::protobuf::int32 RoleScheme_PropScheme::defense() const {
  // @@protoc_insertion_point(field_get:RoleScheme.PropScheme.defense)
  return defense_;
}
void RoleScheme_PropScheme::set_defense(::google::protobuf::int32 value) {
  
  defense_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.PropScheme.defense)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleScheme::kRoleIdFieldNumber;
const int RoleScheme::kNameFieldNumber;
const int RoleScheme::kLevelFieldNumber;
const int RoleScheme::kVocationFieldNumber;
const int RoleScheme::kCoordsFieldNumber;
const int RoleScheme::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleScheme::RoleScheme()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scheme_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleScheme)
}
RoleScheme::RoleScheme(const RoleScheme& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coords_(from.coords_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_props()) {
    props_ = new ::RoleScheme_PropScheme(*from.props_);
  } else {
    props_ = NULL;
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&vocation_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(vocation_));
  // @@protoc_insertion_point(copy_constructor:RoleScheme)
}

void RoleScheme::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&props_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vocation_) -
      reinterpret_cast<char*>(&props_)) + sizeof(vocation_));
  _cached_size_ = 0;
}

RoleScheme::~RoleScheme() {
  // @@protoc_insertion_point(destructor:RoleScheme)
  SharedDtor();
}

void RoleScheme::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete props_;
}

void RoleScheme::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleScheme::descriptor() {
  protobuf_scheme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scheme_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleScheme& RoleScheme::default_instance() {
  protobuf_scheme_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleScheme* RoleScheme::New(::google::protobuf::Arena* arena) const {
  RoleScheme* n = new RoleScheme;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleScheme::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coords_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && props_ != NULL) {
    delete props_;
  }
  props_ = NULL;
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vocation_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(vocation_));
  _internal_metadata_.Clear();
}

bool RoleScheme::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleScheme)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2 [(.text) = "\345\220\215\345\255\227"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleScheme.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_vocation(static_cast< ::RoleScheme_Vocation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleScheme)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleScheme)
  return false;
#undef DO_
}

void RoleScheme::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // string name = 2 [(.text) = "\345\220\215\345\255\227"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleScheme.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
  if (this->vocation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vocation(), output);
  }

  // repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
  if (this->coords_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _coords_cached_byte_size_));
  }
  for (int i = 0, n = this->coords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->coords(i), output);
  }

  // .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
  if (this->has_props()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->props_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoleScheme)
}

::google::protobuf::uint8* RoleScheme::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleScheme)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // string name = 2 [(.text) = "\345\220\215\345\255\227"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleScheme.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
  if (this->vocation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vocation(), target);
  }

  // repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
  if (this->coords_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _coords_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->coords_, target);
  }

  // .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
  if (this->has_props()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->props_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoleScheme)
  return target;
}

size_t RoleScheme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoleScheme)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->coords_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coords_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 2 [(.text) = "\345\220\215\345\255\227"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
  if (this->has_props()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->props_);
  }

  // int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  // int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
  if (this->vocation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vocation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleScheme::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleScheme)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleScheme* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleScheme>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleScheme)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleScheme)
    MergeFrom(*source);
  }
}

void RoleScheme::MergeFrom(const RoleScheme& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleScheme)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coords_.MergeFrom(from.coords_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_props()) {
    mutable_props()->::RoleScheme_PropScheme::MergeFrom(from.props());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.vocation() != 0) {
    set_vocation(from.vocation());
  }
}

void RoleScheme::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleScheme::CopyFrom(const RoleScheme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleScheme::IsInitialized() const {
  return true;
}

void RoleScheme::Swap(RoleScheme* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleScheme::InternalSwap(RoleScheme* other) {
  using std::swap;
  coords_.InternalSwap(&other->coords_);
  name_.Swap(&other->name_);
  swap(props_, other->props_);
  swap(roleid_, other->roleid_);
  swap(level_, other->level_);
  swap(vocation_, other->vocation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleScheme::GetMetadata() const {
  protobuf_scheme_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scheme_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleScheme

// int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
void RoleScheme::clear_roleid() {
  roleid_ = 0;
}
::google::protobuf::int32 RoleScheme::roleid() const {
  // @@protoc_insertion_point(field_get:RoleScheme.roleId)
  return roleid_;
}
void RoleScheme::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.roleId)
}

// string name = 2 [(.text) = "\345\220\215\345\255\227"];
void RoleScheme::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleScheme::name() const {
  // @@protoc_insertion_point(field_get:RoleScheme.name)
  return name_.GetNoArena();
}
void RoleScheme::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleScheme.name)
}
#if LANG_CXX11
void RoleScheme::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleScheme.name)
}
#endif
void RoleScheme::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleScheme.name)
}
void RoleScheme::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleScheme.name)
}
::std::string* RoleScheme::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleScheme.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleScheme::release_name() {
  // @@protoc_insertion_point(field_release:RoleScheme.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleScheme::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleScheme.name)
}

// int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
void RoleScheme::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 RoleScheme::level() const {
  // @@protoc_insertion_point(field_get:RoleScheme.level)
  return level_;
}
void RoleScheme::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.level)
}

// .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
void RoleScheme::clear_vocation() {
  vocation_ = 0;
}
::RoleScheme_Vocation RoleScheme::vocation() const {
  // @@protoc_insertion_point(field_get:RoleScheme.vocation)
  return static_cast< ::RoleScheme_Vocation >(vocation_);
}
void RoleScheme::set_vocation(::RoleScheme_Vocation value) {
  
  vocation_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.vocation)
}

// repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
int RoleScheme::coords_size() const {
  return coords_.size();
}
void RoleScheme::clear_coords() {
  coords_.Clear();
}
::google::protobuf::int32 RoleScheme::coords(int index) const {
  // @@protoc_insertion_point(field_get:RoleScheme.coords)
  return coords_.Get(index);
}
void RoleScheme::set_coords(int index, ::google::protobuf::int32 value) {
  coords_.Set(index, value);
  // @@protoc_insertion_point(field_set:RoleScheme.coords)
}
void RoleScheme::add_coords(::google::protobuf::int32 value) {
  coords_.Add(value);
  // @@protoc_insertion_point(field_add:RoleScheme.coords)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleScheme::coords() const {
  // @@protoc_insertion_point(field_list:RoleScheme.coords)
  return coords_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleScheme::mutable_coords() {
  // @@protoc_insertion_point(field_mutable_list:RoleScheme.coords)
  return &coords_;
}

// .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
bool RoleScheme::has_props() const {
  return this != internal_default_instance() && props_ != NULL;
}
void RoleScheme::clear_props() {
  if (GetArenaNoVirtual() == NULL && props_ != NULL) delete props_;
  props_ = NULL;
}
const ::RoleScheme_PropScheme& RoleScheme::props() const {
  const ::RoleScheme_PropScheme* p = props_;
  // @@protoc_insertion_point(field_get:RoleScheme.props)
  return p != NULL ? *p : *reinterpret_cast<const ::RoleScheme_PropScheme*>(
      &::_RoleScheme_PropScheme_default_instance_);
}
::RoleScheme_PropScheme* RoleScheme::mutable_props() {
  
  if (props_ == NULL) {
    props_ = new ::RoleScheme_PropScheme;
  }
  // @@protoc_insertion_point(field_mutable:RoleScheme.props)
  return props_;
}
::RoleScheme_PropScheme* RoleScheme::release_props() {
  // @@protoc_insertion_point(field_release:RoleScheme.props)
  
  ::RoleScheme_PropScheme* temp = props_;
  props_ = NULL;
  return temp;
}
void RoleScheme::set_allocated_props(::RoleScheme_PropScheme* props) {
  delete props_;
  props_ = props;
  if (props) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RoleScheme.props)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
