// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheme.proto

#ifndef PROTOBUF_scheme_2eproto__INCLUDED
#define PROTOBUF_scheme_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "option.pb.h"
// @@protoc_insertion_point(includes)
class RoleScheme;
class RoleSchemeDefaultTypeInternal;
extern RoleSchemeDefaultTypeInternal _RoleScheme_default_instance_;
class RoleScheme_PropScheme;
class RoleScheme_PropSchemeDefaultTypeInternal;
extern RoleScheme_PropSchemeDefaultTypeInternal _RoleScheme_PropScheme_default_instance_;

namespace protobuf_scheme_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_scheme_2eproto

enum RoleScheme_Vocation {
  RoleScheme_Vocation_VOCATION_UNKNOW = 0,
  RoleScheme_Vocation_VOCATION_WARRIOR = 1,
  RoleScheme_Vocation_VOCATION_MASTER = 2,
  RoleScheme_Vocation_VOCATION_SHAMAN = 3,
  RoleScheme_Vocation_RoleScheme_Vocation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RoleScheme_Vocation_RoleScheme_Vocation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RoleScheme_Vocation_IsValid(int value);
const RoleScheme_Vocation RoleScheme_Vocation_Vocation_MIN = RoleScheme_Vocation_VOCATION_UNKNOW;
const RoleScheme_Vocation RoleScheme_Vocation_Vocation_MAX = RoleScheme_Vocation_VOCATION_SHAMAN;
const int RoleScheme_Vocation_Vocation_ARRAYSIZE = RoleScheme_Vocation_Vocation_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleScheme_Vocation_descriptor();
inline const ::std::string& RoleScheme_Vocation_Name(RoleScheme_Vocation value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleScheme_Vocation_descriptor(), value);
}
inline bool RoleScheme_Vocation_Parse(
    const ::std::string& name, RoleScheme_Vocation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleScheme_Vocation>(
    RoleScheme_Vocation_descriptor(), name, value);
}
// ===================================================================

class RoleScheme_PropScheme : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleScheme.PropScheme) */ {
 public:
  RoleScheme_PropScheme();
  virtual ~RoleScheme_PropScheme();

  RoleScheme_PropScheme(const RoleScheme_PropScheme& from);

  inline RoleScheme_PropScheme& operator=(const RoleScheme_PropScheme& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleScheme_PropScheme(RoleScheme_PropScheme&& from) noexcept
    : RoleScheme_PropScheme() {
    *this = ::std::move(from);
  }

  inline RoleScheme_PropScheme& operator=(RoleScheme_PropScheme&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleScheme_PropScheme& default_instance();

  static inline const RoleScheme_PropScheme* internal_default_instance() {
    return reinterpret_cast<const RoleScheme_PropScheme*>(
               &_RoleScheme_PropScheme_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RoleScheme_PropScheme* other);
  friend void swap(RoleScheme_PropScheme& a, RoleScheme_PropScheme& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleScheme_PropScheme* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleScheme_PropScheme* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleScheme_PropScheme& from);
  void MergeFrom(const RoleScheme_PropScheme& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleScheme_PropScheme* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
  void clear_attack();
  static const int kAttackFieldNumber = 1;
  ::google::protobuf::int32 attack() const;
  void set_attack(::google::protobuf::int32 value);

  // int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
  void clear_defense();
  static const int kDefenseFieldNumber = 2;
  ::google::protobuf::int32 defense() const;
  void set_defense(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleScheme.PropScheme)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defense_;
  mutable int _cached_size_;
  friend struct protobuf_scheme_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoleScheme : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleScheme) */ {
 public:
  RoleScheme();
  virtual ~RoleScheme();

  RoleScheme(const RoleScheme& from);

  inline RoleScheme& operator=(const RoleScheme& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleScheme(RoleScheme&& from) noexcept
    : RoleScheme() {
    *this = ::std::move(from);
  }

  inline RoleScheme& operator=(RoleScheme&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleScheme& default_instance();

  static inline const RoleScheme* internal_default_instance() {
    return reinterpret_cast<const RoleScheme*>(
               &_RoleScheme_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RoleScheme* other);
  friend void swap(RoleScheme& a, RoleScheme& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleScheme* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleScheme* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleScheme& from);
  void MergeFrom(const RoleScheme& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleScheme* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RoleScheme_PropScheme PropScheme;

  typedef RoleScheme_Vocation Vocation;
  static const Vocation VOCATION_UNKNOW =
    RoleScheme_Vocation_VOCATION_UNKNOW;
  static const Vocation VOCATION_WARRIOR =
    RoleScheme_Vocation_VOCATION_WARRIOR;
  static const Vocation VOCATION_MASTER =
    RoleScheme_Vocation_VOCATION_MASTER;
  static const Vocation VOCATION_SHAMAN =
    RoleScheme_Vocation_VOCATION_SHAMAN;
  static inline bool Vocation_IsValid(int value) {
    return RoleScheme_Vocation_IsValid(value);
  }
  static const Vocation Vocation_MIN =
    RoleScheme_Vocation_Vocation_MIN;
  static const Vocation Vocation_MAX =
    RoleScheme_Vocation_Vocation_MAX;
  static const int Vocation_ARRAYSIZE =
    RoleScheme_Vocation_Vocation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Vocation_descriptor() {
    return RoleScheme_Vocation_descriptor();
  }
  static inline const ::std::string& Vocation_Name(Vocation value) {
    return RoleScheme_Vocation_Name(value);
  }
  static inline bool Vocation_Parse(const ::std::string& name,
      Vocation* value) {
    return RoleScheme_Vocation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
  int coords_size() const;
  void clear_coords();
  static const int kCoordsFieldNumber = 5;
  ::google::protobuf::int32 coords(int index) const;
  void set_coords(int index, ::google::protobuf::int32 value);
  void add_coords(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      coords() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_coords();

  // string name = 2 [(.text) = "\345\220\215\345\255\227"];
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
  bool has_props() const;
  void clear_props();
  static const int kPropsFieldNumber = 6;
  const ::RoleScheme_PropScheme& props() const;
  ::RoleScheme_PropScheme* mutable_props();
  ::RoleScheme_PropScheme* release_props();
  void set_allocated_props(::RoleScheme_PropScheme* props);

  // int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
  void clear_vocation();
  static const int kVocationFieldNumber = 4;
  ::RoleScheme_Vocation vocation() const;
  void set_vocation(::RoleScheme_Vocation value);

  // @@protoc_insertion_point(class_scope:RoleScheme)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > coords_;
  mutable int _coords_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::RoleScheme_PropScheme* props_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 level_;
  int vocation_;
  mutable int _cached_size_;
  friend struct protobuf_scheme_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoleScheme_PropScheme

// int32 attack = 1 [(.text) = "\346\224\273\345\207\273"];
inline void RoleScheme_PropScheme::clear_attack() {
  attack_ = 0;
}
inline ::google::protobuf::int32 RoleScheme_PropScheme::attack() const {
  // @@protoc_insertion_point(field_get:RoleScheme.PropScheme.attack)
  return attack_;
}
inline void RoleScheme_PropScheme::set_attack(::google::protobuf::int32 value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.PropScheme.attack)
}

// int32 defense = 2 [(.text) = "\351\230\262\345\276\241"];
inline void RoleScheme_PropScheme::clear_defense() {
  defense_ = 0;
}
inline ::google::protobuf::int32 RoleScheme_PropScheme::defense() const {
  // @@protoc_insertion_point(field_get:RoleScheme.PropScheme.defense)
  return defense_;
}
inline void RoleScheme_PropScheme::set_defense(::google::protobuf::int32 value) {
  
  defense_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.PropScheme.defense)
}

// -------------------------------------------------------------------

// RoleScheme

// int32 roleId = 1 [(.text) = "\350\247\222\350\211\262ID"];
inline void RoleScheme::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 RoleScheme::roleid() const {
  // @@protoc_insertion_point(field_get:RoleScheme.roleId)
  return roleid_;
}
inline void RoleScheme::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.roleId)
}

// string name = 2 [(.text) = "\345\220\215\345\255\227"];
inline void RoleScheme::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleScheme::name() const {
  // @@protoc_insertion_point(field_get:RoleScheme.name)
  return name_.GetNoArena();
}
inline void RoleScheme::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleScheme.name)
}
#if LANG_CXX11
inline void RoleScheme::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleScheme.name)
}
#endif
inline void RoleScheme::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleScheme.name)
}
inline void RoleScheme::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleScheme.name)
}
inline ::std::string* RoleScheme::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleScheme.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleScheme::release_name() {
  // @@protoc_insertion_point(field_release:RoleScheme.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleScheme::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleScheme.name)
}

// int32 level = 3 [(.text) = "\347\255\211\347\272\247"];
inline void RoleScheme::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 RoleScheme::level() const {
  // @@protoc_insertion_point(field_get:RoleScheme.level)
  return level_;
}
inline void RoleScheme::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.level)
}

// .RoleScheme.Vocation vocation = 4 [(.text) = "\350\201\214\344\270\232"];
inline void RoleScheme::clear_vocation() {
  vocation_ = 0;
}
inline ::RoleScheme_Vocation RoleScheme::vocation() const {
  // @@protoc_insertion_point(field_get:RoleScheme.vocation)
  return static_cast< ::RoleScheme_Vocation >(vocation_);
}
inline void RoleScheme::set_vocation(::RoleScheme_Vocation value) {
  
  vocation_ = value;
  // @@protoc_insertion_point(field_set:RoleScheme.vocation)
}

// repeated int32 coords = 5 [(.text) = "\345\235\220\346\240\207"];
inline int RoleScheme::coords_size() const {
  return coords_.size();
}
inline void RoleScheme::clear_coords() {
  coords_.Clear();
}
inline ::google::protobuf::int32 RoleScheme::coords(int index) const {
  // @@protoc_insertion_point(field_get:RoleScheme.coords)
  return coords_.Get(index);
}
inline void RoleScheme::set_coords(int index, ::google::protobuf::int32 value) {
  coords_.Set(index, value);
  // @@protoc_insertion_point(field_set:RoleScheme.coords)
}
inline void RoleScheme::add_coords(::google::protobuf::int32 value) {
  coords_.Add(value);
  // @@protoc_insertion_point(field_add:RoleScheme.coords)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleScheme::coords() const {
  // @@protoc_insertion_point(field_list:RoleScheme.coords)
  return coords_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleScheme::mutable_coords() {
  // @@protoc_insertion_point(field_mutable_list:RoleScheme.coords)
  return &coords_;
}

// .RoleScheme.PropScheme props = 6 [(.text) = "\345\261\236\346\200\247"];
inline bool RoleScheme::has_props() const {
  return this != internal_default_instance() && props_ != NULL;
}
inline void RoleScheme::clear_props() {
  if (GetArenaNoVirtual() == NULL && props_ != NULL) delete props_;
  props_ = NULL;
}
inline const ::RoleScheme_PropScheme& RoleScheme::props() const {
  const ::RoleScheme_PropScheme* p = props_;
  // @@protoc_insertion_point(field_get:RoleScheme.props)
  return p != NULL ? *p : *reinterpret_cast<const ::RoleScheme_PropScheme*>(
      &::_RoleScheme_PropScheme_default_instance_);
}
inline ::RoleScheme_PropScheme* RoleScheme::mutable_props() {
  
  if (props_ == NULL) {
    props_ = new ::RoleScheme_PropScheme;
  }
  // @@protoc_insertion_point(field_mutable:RoleScheme.props)
  return props_;
}
inline ::RoleScheme_PropScheme* RoleScheme::release_props() {
  // @@protoc_insertion_point(field_release:RoleScheme.props)
  
  ::RoleScheme_PropScheme* temp = props_;
  props_ = NULL;
  return temp;
}
inline void RoleScheme::set_allocated_props(::RoleScheme_PropScheme* props) {
  delete props_;
  props_ = props;
  if (props) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RoleScheme.props)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RoleScheme_Vocation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoleScheme_Vocation>() {
  return ::RoleScheme_Vocation_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scheme_2eproto__INCLUDED
